name: Build Docker Image and Push to Evolution Artifact Registry

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  REGISTRY: "apex-map321.cr.cloud.ru/apex-map"
  IMAGE_NAME: "apex-server-go"
  CONTAINER_NAME: "apex-server"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Evolution Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.CR_URI }}
          username: ${{ secrets.EVO_CR_LOGIN }}
          password: ${{ secrets.EVO_CR_PWD }}
      - name: Add env file
        run: |
          touch server/.env
          echo "SERVER_PORT=${{ env.SERVER_PORT }}" >> server/.env
          echo "SERVER_TIMESTOMP=${{ env.SERVER_TIMESTOMP }}" >> server/.env
          cat server/.env

      - name: Go - Build and push docker image to Evolution Aritfact Registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.CR_URI }}/apex-map:${{ github.sha }}
          file: ./server/Dockerfile
          context: ./server
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Cloud via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Login into Cloud Registry
            docker login -u ${{ secrets.CLOUD_KEY_SECRET }} -p ${{ secrets.CLOUD_KEY_SECRET }} $(echo $REGISTRY)

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new container from a new image
            docker run \
            --restart always \
            --publish 7070:7070 \
            --name $(echo $CONTAINER_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
